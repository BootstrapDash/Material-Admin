// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../../@material/base/component
//   ../../@material/ripple/component
//   ../../@material/ripple/types
//   ../../@material/base/foundation

declare module '@material/checkbox' {
    /**
      * @license
      * Copyright 2019 Google Inc.
      *
      * Permission is hereby granted, free of charge, to any person obtaining a copy
      * of this software and associated documentation files (the "Software"), to deal
      * in the Software without restriction, including without limitation the rights
      * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
      * copies of the Software, and to permit persons to whom the Software is
      * furnished to do so, subject to the following conditions:
      *
      * The above copyright notice and this permission notice shall be included in
      * all copies or substantial portions of the Software.
      *
      * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
      * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
      * THE SOFTWARE.
      */
    export * from '@material/checkbox/adapter';
    export * from '@material/checkbox/component';
    export * from '@material/checkbox/constants';
    export * from '@material/checkbox/foundation';
}

declare module '@material/checkbox/adapter' {
    /**
        * Defines the shape of the adapter expected by the foundation.
        * Implement this adapter for your framework of choice to delegate updates to
        * the component in your framework of choice. See architecture documentation
        * for more details.
        * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
        */
    export interface MDCCheckboxAdapter {
            addClass(className: string): void;
            forceLayout(): void;
            hasNativeControl(): boolean;
            isAttachedToDOM(): boolean;
            isChecked(): boolean;
            isIndeterminate(): boolean;
            removeClass(className: string): void;
            removeNativeControlAttr(attr: string): void;
            setNativeControlAttr(attr: string, value: string): void;
            setNativeControlDisabled(disabled: boolean): void;
    }
}

declare module '@material/checkbox/component' {
    /**
      * @license
      * Copyright 2016 Google Inc.
      *
      * Permission is hereby granted, free of charge, to any person obtaining a copy
      * of this software and associated documentation files (the "Software"), to deal
      * in the Software without restriction, including without limitation the rights
      * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
      * copies of the Software, and to permit persons to whom the Software is
      * furnished to do so, subject to the following conditions:
      *
      * The above copyright notice and this permission notice shall be included in
      * all copies or substantial portions of the Software.
      *
      * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
      * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
      * THE SOFTWARE.
      */
    import { MDCComponent } from '@material/base/component';
    import { MDCRipple } from '@material/ripple/component';
    import { MDCRippleCapableSurface } from '@material/ripple/types';
    import { MDCCheckboxFoundation } from '@material/checkbox/foundation';
    export type MDCCheckboxFactory = (el: Element, foundation?: MDCCheckboxFoundation) => MDCCheckbox;
    export class MDCCheckbox extends MDCComponent<MDCCheckboxFoundation> implements MDCRippleCapableSurface {
        static attachTo(root: Element): MDCCheckbox;
        readonly ripple: MDCRipple;
        checked: boolean;
        indeterminate: boolean;
        disabled: boolean;
        value: string;
        root_: Element;
        initialSyncWithDOM(): void;
        destroy(): void;
        getDefaultFoundation(): MDCCheckboxFoundation;
    }
}

declare module '@material/checkbox/constants' {
    /**
      * @license
      * Copyright 2016 Google Inc.
      *
      * Permission is hereby granted, free of charge, to any person obtaining a copy
      * of this software and associated documentation files (the "Software"), to deal
      * in the Software without restriction, including without limitation the rights
      * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
      * copies of the Software, and to permit persons to whom the Software is
      * furnished to do so, subject to the following conditions:
      *
      * The above copyright notice and this permission notice shall be included in
      * all copies or substantial portions of the Software.
      *
      * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
      * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
      * THE SOFTWARE.
      */
    export const cssClasses: {
        ANIM_CHECKED_INDETERMINATE: string;
        ANIM_CHECKED_UNCHECKED: string;
        ANIM_INDETERMINATE_CHECKED: string;
        ANIM_INDETERMINATE_UNCHECKED: string;
        ANIM_UNCHECKED_CHECKED: string;
        ANIM_UNCHECKED_INDETERMINATE: string;
        BACKGROUND: string;
        CHECKED: string;
        CHECKMARK: string;
        CHECKMARK_PATH: string;
        DISABLED: string;
        INDETERMINATE: string;
        MIXEDMARK: string;
        NATIVE_CONTROL: string;
        ROOT: string;
        SELECTED: string;
        UPGRADED: string;
    };
    export const strings: {
        ARIA_CHECKED_ATTR: string;
        ARIA_CHECKED_INDETERMINATE_VALUE: string;
        NATIVE_CONTROL_SELECTOR: string;
        TRANSITION_STATE_CHECKED: string;
        TRANSITION_STATE_INDETERMINATE: string;
        TRANSITION_STATE_INIT: string;
        TRANSITION_STATE_UNCHECKED: string;
    };
    export const numbers: {
        ANIM_END_LATCH_MS: number;
    };
}

declare module '@material/checkbox/foundation' {
    /**
        * @license
        * Copyright 2016 Google Inc.
        *
        * Permission is hereby granted, free of charge, to any person obtaining a copy
        * of this software and associated documentation files (the "Software"), to deal
        * in the Software without restriction, including without limitation the rights
        * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        * copies of the Software, and to permit persons to whom the Software is
        * furnished to do so, subject to the following conditions:
        *
        * The above copyright notice and this permission notice shall be included in
        * all copies or substantial portions of the Software.
        *
        * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        * THE SOFTWARE.
        */
    import { MDCFoundation } from '@material/base/foundation';
    import { MDCCheckboxAdapter } from '@material/checkbox/adapter';
    export class MDCCheckboxFoundation extends MDCFoundation<MDCCheckboxAdapter> {
            static readonly cssClasses: {
                    ANIM_CHECKED_INDETERMINATE: string;
                    ANIM_CHECKED_UNCHECKED: string;
                    ANIM_INDETERMINATE_CHECKED: string;
                    ANIM_INDETERMINATE_UNCHECKED: string;
                    ANIM_UNCHECKED_CHECKED: string;
                    ANIM_UNCHECKED_INDETERMINATE: string;
                    BACKGROUND: string;
                    CHECKED: string;
                    CHECKMARK: string;
                    CHECKMARK_PATH: string;
                    DISABLED: string;
                    INDETERMINATE: string;
                    MIXEDMARK: string;
                    NATIVE_CONTROL: string;
                    ROOT: string;
                    SELECTED: string;
                    UPGRADED: string;
            };
            static readonly strings: {
                    ARIA_CHECKED_ATTR: string;
                    ARIA_CHECKED_INDETERMINATE_VALUE: string;
                    NATIVE_CONTROL_SELECTOR: string;
                    TRANSITION_STATE_CHECKED: string;
                    TRANSITION_STATE_INDETERMINATE: string;
                    TRANSITION_STATE_INIT: string;
                    TRANSITION_STATE_UNCHECKED: string;
            };
            static readonly numbers: {
                    ANIM_END_LATCH_MS: number;
            };
            static readonly defaultAdapter: MDCCheckboxAdapter;
            constructor(adapter?: Partial<MDCCheckboxAdapter>);
            init(): void;
            destroy(): void;
            setDisabled(disabled: boolean): void;
            /**
                * Handles the animationend event for the checkbox
                */
            handleAnimationEnd(): void;
            /**
                * Handles the change event for the checkbox
                */
            handleChange(): void;
    }
    export default MDCCheckboxFoundation;
}

