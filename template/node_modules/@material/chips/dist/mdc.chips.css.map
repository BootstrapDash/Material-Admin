{"version":3,"sources":["webpack:///./packages/mdc-chips/mdc-chips.scss","webpack:///./packages/mdc-chips/_variables.scss","webpack:///./packages/material-components-web/node_modules/@material/shape/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/theme/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/typography/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/rtl/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/checkbox/_variables.scss","webpack:///./packages/material-components-web/node_modules/@material/ripple/_keyframes.scss","webpack:///./packages/material-components-web/node_modules/@material/animation/_variables.scss","webpack:///./packages/material-components-web/node_modules/@material/ripple/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/ripple/_variables.scss"],"names":[],"mappings":";;;;;;;AA0cE;EAEI;CA1cL;;AAudC;EAEI;CArdL;AAwdG;EAEI;CAvdP;AA2dG;EAEI;CA1dP;;AAqeC;EAeE,YC9dyB;ED+dzB,aC/dyB;EDgezB,gBCheyB;CDhB5B;;AAqeC;EASE,YC7d0B;ED8d1B,aC9d0B;ED+d1B,gBC/d0B;CDX7B;;AAkgBC;EAEI,mBC5egC;ED6ehC,iBC5e+B;CDpBpC;;AAyBC;EEhBE;EC8CE,0BF3DwB;EE2DxB,2BF1DuB;EGgCvB,gCARU;EAQV,mCARU;EAQV,oCARU;EAQV,oBARU;EAQV,qBARU;EAQV,iBARU;EAQV,+BARU;EAQV,yBARU;EAQV,wBARU;EJmYZ,aCzZsB;EDmCpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;CAjBL;AA4RC;EG/PI,2BF1DuB;CDgC5B;AAkdC;;EKpPE;EAGF;EAHE;EAGF;CL1ND;AKeK;;;EAwMF;EAGF;EAHE;EAGF;CLlND;AACK;EACE;EACA;CACP;AAGG;EGqCE,YA1BM;EA6CJ;EACA;CHvDP;;AAKC;EAEI,yICrCJ;EDyCI;CANL;;AAUC;EAEI;CARL;;AAYC;EAEI;EACA;EACA;CAVL;;AAcC;EAEI,aC/EuB;CDmE5B;;AAgBC;EAEI,sEACE;EAQF;EACA,8BM1F2B;EN2F3B,6BM3F2B;CNqEhC;;AA0BC;EAEI;CAxBL;;AAsPC;EGjPI,eA1BM;EA6CJ;EACA;CHnBP;AAoVC;EAEI;CAnVL;AAoPG;EGxPE,eA1BM;EA6CJ;EACA;CHXP;AAsPC;EG/PI,gBA1BM;EA6CJ;EACA;CHNP;AAgBG;EG9BE,uBA1BM;EA6CJ;EACA;CHDP;;AAoBC;EAEI;EACA,aC7HuB;EDiIvB;CArBL;;AAyBC;EAEI,YCvIuB;CDgH5B;;AA8BG;EAEI;EACA,wBC9IsB;EDkJtB;CA/BP;AAkCK;EAEI;EAGA,uBCzJmC;ED6JnC;CAtCT;AAyCO;EAII;CA1CX;AAkDG;EAEI;CAjDP;AAoDK;EAGI;EACA;CApDT;AAyDG;EAEI;EAKA;CA5DP;AA+DK;EAEI,YC1MmB;CD4I5B;;AOlJC;EACE;IACE,gECPyC;YDOzC,wDCPyC;IDYzC;YAAA;GPiJH;EO9IC;IACE;YAAA;GPgJH;CACF;;AO5JC;EACE;IACE,gECPyC;YDOzC,wDCPyC;IDYzC;YAAA;GPiJH;EO9IC;IACE;YAAA;GPgJH;CACF;AO7IC;EACE;IACE;YAAA;IACA;GP+IH;EO5IC;IACE;GP8IH;CACF;AOtJC;EACE;IACE;YAAA;IACA;GP+IH;EO5IC;IACE;GP8IH;CACF;AO3IC;EACE;IACE;YAAA;IACA;GP6IH;EO1IC;IACE;GP4IH;CACF;AOpJC;EACE;IACE;YAAA;IACA;GP6IH;EO1IC;IACE;GP4IH;CACF;ASnHK;EACE;EAEA;CToHP;ASlHO;EACE;CToHT;;AAqCC;ES7IE;EACA;EACA;EACA;EACA;EACA;EAEA;CT2GH;ASvGC;EAGI;EACA;EACA;EACA;EACA;CTuGL;ASnGC;EAGI,8DACE;EAKF;CT8FL;ASxFC;EAEI;UAAA;CTyFL;ASrFC;EAEI;EACA;EACA;EACA;UAAA;EACA;UAAA;CTsFL;ASlFC;EAEI;EACA;EACA;CTmFL;AS/EC;EAEI,kGACE;UADF,0FACE;CT+EP;AS1EC;EAEI;UAAA;EAKA;UAAA;CTuEL;AS6EC;EAGI;EACA;EACA;EACA;EACA;CT7EL;ASiFC;EAEI;EACA;CThFL;AS1EC;ENzGI,sCF1DuB;CDgP5B;AS3DC;EAGI,cAkL8B;CTvHnC;AStCC;EAII;EAIA,cAuJF;CTrHH;ASrBG;EAEI;CTsBP;ASlBG;EAEI,0BC9OsB;EDmPtB,cAiI4B;CTlHnC;ASVC;EAEI;CTWL;;ASgCG;EAGI,cAPa;CTxBpB;ASlGC;ENxEI,0BA1BM;CHuMX;AGrKS;EAEE;IACE;IACA;GHsKX;CACF;ASzFC;EAGI,cAkL8B;CTzFnC;ASpEC;EAII;EAIA,aAuJF;CTvFH;ASnDG;EAEI;CToDP;AShDG;EAEI,0BC9OsB;EDmPtB,aAiI4B;CTpFnC;ASxCC;EAEI;CTyCL;;AAjDG;EACE;IACE;YAAA;IACA;GAoDL;EAjDG;IACE;YAAA;IACA;GAmDL;CACF;;AA5DG;EACE;IACE;YAAA;IACA;GAoDL;EAjDG;IACE;YAAA;IACA;GAmDL;CACF;AA/CC;EAwKE;EApKE;EACA;EACA;CA+CL;AAsHC;EAEI;CArHL;;AA9CC;EAEI;UAAA","file":"mdc.chips.css","sourcesContent":["//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/animation/variables\";\n@import \"@material/checkbox/functions\";\n@import \"@material/checkbox/variables\";\n@import \"@material/elevation/mixins\";\n@import \"@material/feature-targeting/functions\";\n@import \"@material/feature-targeting/mixins\";\n@import \"@material/ripple/mixins\";\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/functions\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n@import \"@material/shape/mixins\";\n@import \"@material/shape/functions\";\n@import \"./variables\";\n\n@mixin mdc-chip-core-styles($query: mdc-feature-all()) {\n  @include mdc-chip-without-ripple($query: $query);\n  @include mdc-chip-ripple($query: $query);\n}\n\n@mixin mdc-chip-without-ripple($query: mdc-feature-all()) {\n  $feat-animation: mdc-feature-create-target($query, animation);\n  $feat-color: mdc-feature-create-target($query, color);\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-chip-leading-icon-color($mdc-chip-icon-color, $query: $query);\n  @include mdc-chip-trailing-icon-color($mdc-chip-icon-color, $query: $query);\n  @include mdc-chip-leading-icon-size($mdc-chip-leading-icon-size, $query: $query);\n  @include mdc-chip-trailing-icon-size($mdc-chip-trailing-icon-size, $query: $query);\n  @include mdc-chip-trailing-icon-margin($query: $query);\n\n  .mdc-chip {\n    @include mdc-chip-shape-radius(50%, $query: $query);\n    @include mdc-chip-fill-color($mdc-chip-fill-color-default, $query: $query);\n    @include mdc-chip-ink-color-without-ripple_($mdc-chip-ink-color-default, $query: $query);\n    @include mdc-typography(body2, $query: $query);\n    @include mdc-chip-height($mdc-chip-height-default, $query: $query);\n    @include mdc-chip-leading-icon-margin($query: $query);\n\n    @include mdc-feature-targets($feat-structure) {\n      display: inline-flex;\n      position: relative;\n      align-items: center;\n      box-sizing: border-box;\n      padding: 0 $mdc-chip-horizontal-padding;\n      border-width: 0;\n      outline: none;\n      cursor: pointer;\n      -webkit-appearance: none;\n      overflow: hidden;\n\n      &::-moz-focus-inner {\n        padding: 0;\n        border: 0;\n      }\n    }\n\n    &:hover {\n      @include mdc-feature-targets($feat-color) {\n        @include mdc-theme-prop(color, on-surface);\n      }\n    }\n  }\n\n  .mdc-chip--exit {\n    @include mdc-feature-targets($feat-color) {\n      transition: $mdc-chip-exit-transition;\n    }\n\n    @include mdc-feature-targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n\n  .mdc-chip__text {\n    @include mdc-feature-targets($feat-structure) {\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-chip__icon {\n    @include mdc-feature-targets($feat-structure) {\n      border-radius: 50%;\n      outline: none;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-chip__checkmark {\n    @include mdc-feature-targets($feat-structure) {\n      height: $mdc-chip-leading-icon-size;\n    }\n  }\n\n  .mdc-chip__checkmark-path {\n    @include mdc-feature-targets($feat-animation) {\n      transition:\n        mdc-checkbox-transition-exit(\n          stroke-dashoffset,\n          $mdc-chip-checkmark-animation-delay,\n          $mdc-chip-checkmark-animation-duration\n        );\n    }\n\n    @include mdc-feature-targets($feat-structure) {\n      stroke-width: 2px;\n      stroke-dashoffset: $mdc-checkbox-mark-path-length_;\n      stroke-dasharray: $mdc-checkbox-mark-path-length_;\n    }\n  }\n\n  .mdc-chip--selected .mdc-chip__checkmark-path {\n    @include mdc-feature-targets($feat-structure) {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  // Change color of selected choice chips\n\n  .mdc-chip-set--choice {\n    .mdc-chip {\n      @include mdc-chip-selected-ink-color-without-ripple_(primary, $query: $query);\n    }\n\n    .mdc-chip--selected {\n      @include mdc-feature-targets($feat-color) {\n        @include mdc-theme-prop(background-color, surface);\n      }\n    }\n  }\n\n  // Add leading checkmark to filter chips with no leading icon\n\n  .mdc-chip__checkmark-svg {\n    @include mdc-feature-targets($feat-structure) {\n      width: 0;\n      height: $mdc-chip-leading-icon-size;\n    }\n\n    @include mdc-feature-targets($feat-animation) {\n      transition: width $mdc-chip-width-animation-duration $mdc-animation-standard-curve-timing-function;\n    }\n  }\n\n  .mdc-chip--selected .mdc-chip__checkmark-svg {\n    @include mdc-feature-targets($feat-structure) {\n      width: $mdc-chip-leading-icon-size;\n    }\n  }\n\n  // Add leading checkmark to filter chips with a leading icon\n\n  .mdc-chip-set--filter {\n    .mdc-chip__icon--leading {\n      @include mdc-feature-targets($feat-animation) {\n        transition: opacity $mdc-chip-opacity-animation-duration linear;\n        transition-delay: $mdc-chip-leading-icon-delay;\n      }\n\n      @include mdc-feature-targets($feat-structure) {\n        opacity: 1;\n      }\n\n      + .mdc-chip__checkmark {\n        @include mdc-feature-targets($feat-animation) {\n          transition: opacity $mdc-chip-opacity-animation-duration linear;\n\n          // Delay the checkmark transition.\n          transition-delay: $mdc-chip-checkmark-with-leading-icon-delay;\n        }\n\n        @include mdc-feature-targets($feat-structure) {\n          opacity: 0;\n        }\n\n        .mdc-chip__checkmark-svg {\n          // stylelint-disable max-nesting-depth\n\n          @include mdc-feature-targets($feat-animation) {\n            transition: width 0ms;\n          }\n\n          // stylelint-enable max-nesting-depth\n        }\n      }\n    }\n\n    .mdc-chip--selected .mdc-chip__icon--leading {\n      @include mdc-feature-targets($feat-structure) {\n        opacity: 0;\n      }\n\n      + .mdc-chip__checkmark {\n        @include mdc-feature-targets($feat-structure) {\n          // This ensures that the checkmark has zero width while the leading icon is still animating.\n          width: 0;\n          opacity: 1;\n        }\n      }\n    }\n\n    .mdc-chip__icon--leading-hidden.mdc-chip__icon--leading {\n      @include mdc-feature-targets($feat-structure) {\n        width: 0;\n      }\n\n      @include mdc-feature-targets($feat-structure) {\n        // This ensures that the leading icon doesn't fade in while the checkmark is fading out.\n        opacity: 0;\n      }\n\n      + .mdc-chip__checkmark {\n        @include mdc-feature-targets($feat-structure) {\n          width: $mdc-chip-leading-icon-size;\n        }\n      }\n    }\n  }\n}\n\n@mixin mdc-chip-ripple($query: mdc-feature-all()) {\n  @include mdc-ripple-common($query);\n\n  .mdc-chip {\n    @include mdc-ripple-surface($query: $query);\n    @include mdc-ripple-radius-bounded($query: $query);\n    @include mdc-chip-ink-color-ripple_($mdc-chip-ink-color-default, $query: $query);\n  }\n\n  .mdc-chip-set--choice {\n    .mdc-chip {\n      @include mdc-chip-selected-ink-color-ripple_(primary, $query: $query);\n    }\n  }\n}\n\n@mixin mdc-chip-set-core-styles($query: mdc-feature-all()) {\n  $feat-animation: mdc-feature-create-target($query, animation);\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-animation) {\n    @keyframes mdc-chip-entry {\n      from {\n        transform: scale(.8);\n        opacity: .4;\n      }\n\n      to {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-chip-set {\n    @include mdc-chip-set-spacing(8px, $query: $query);\n\n    @include mdc-feature-targets($feat-structure) {\n      display: flex;\n      flex-wrap: wrap;\n      box-sizing: border-box;\n    }\n  }\n\n  .mdc-chip-set--input .mdc-chip {\n    @include mdc-feature-targets($feat-animation) {\n      animation: mdc-chip-entry 100ms $mdc-animation-deceleration-curve-timing-function;\n    }\n  }\n}\n\n@mixin mdc-chip-shape-radius($radius, $rtl-reflexive: false, $query: mdc-feature-all()) {\n  @include mdc-shape-radius(\n    mdc-shape-resolve-percentage-radius($mdc-chip-height-default, $radius),\n    $rtl-reflexive,\n    $query: $query);\n}\n\n@mixin mdc-chip-fill-color-accessible($color, $query: mdc-feature-all()) {\n  $fill-tone: mdc-theme-tone($color);\n\n  @include mdc-chip-fill-color($color, $query: $query);\n\n  @if ($fill-tone == \"dark\") {\n    @include mdc-chip-ink-color(text-primary-on-dark, $query: $query);\n    @include mdc-chip-selected-ink-color(text-primary-on-dark, $query: $query);\n    @include mdc-chip-leading-icon-color(text-primary-on-dark, $query: $query);\n    @include mdc-chip-trailing-icon-color(text-primary-on-dark, $query: $query);\n  } @else {\n    @include mdc-chip-ink-color(text-primary-on-light, $query: $query);\n    @include mdc-chip-selected-ink-color(text-primary-on-light, $query: $query);\n    @include mdc-chip-leading-icon-color(text-primary-on-light, $query: $query);\n    @include mdc-chip-trailing-icon-color(text-primary-on-light, $query: $query);\n  }\n}\n\n@mixin mdc-chip-fill-color($color, $query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  @include mdc-feature-targets($feat-color) {\n    @include mdc-theme-prop(background-color, $color);\n  }\n}\n\n@mixin mdc-chip-ink-color($color, $query: mdc-feature-all()) {\n  @include mdc-chip-ink-color-ripple_($color, $query: $query);\n  @include mdc-chip-ink-color-without-ripple_($color, $query: $query);\n}\n\n@mixin mdc-chip-ink-color-without-ripple_($color, $query) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  @include mdc-feature-targets($feat-color) {\n    @include mdc-theme-prop(color, $color);\n  }\n\n  &:hover {\n    @include mdc-feature-targets($feat-color) {\n      @include mdc-theme-prop(color, $color);\n    }\n  }\n}\n\n@mixin mdc-chip-ink-color-ripple_($color, $query) {\n  @include mdc-states($color, $query: $query);\n}\n\n@mixin mdc-chip-selected-ink-color($color, $query: mdc-feature-all()) {\n  @include mdc-chip-selected-ink-color-ripple_($color, $query: $query);\n  @include mdc-chip-selected-ink-color-without-ripple_($color, $query: $query);\n}\n\n@mixin mdc-chip-selected-ink-color-without-ripple_($color, $query) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  &.mdc-chip--selected {\n    @include mdc-feature-targets($feat-color) {\n      @include mdc-theme-prop(color, $color);\n    }\n\n    @include mdc-chip-leading-icon-color($color, $query: $query);\n\n    &:hover {\n      @include mdc-feature-targets($feat-color) {\n        @include mdc-theme-prop(color, $color);\n      }\n    }\n  }\n\n  .mdc-chip__checkmark-path {\n    @include mdc-feature-targets($feat-color) {\n      @include mdc-theme-prop(stroke, $color);\n    }\n  }\n}\n\n@mixin mdc-chip-selected-ink-color-ripple_($color, $query) {\n  &.mdc-chip {\n    @include mdc-states-selected($color, $query: $query);\n  }\n}\n\n@mixin mdc-chip-outline(\n  $width: 1px,\n  $style: solid,\n  $color: mdc-theme-prop-value(on-surface),\n  $query: mdc-feature-all()) {\n  @include mdc-chip-outline-width($width, $query: $query);\n  @include mdc-chip-outline-style($style, $query: $query);\n  @include mdc-chip-outline-color($color, $query: $query);\n}\n\n@mixin mdc-chip-outline-color($color, $query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  @include mdc-feature-targets($feat-color) {\n    @include mdc-theme-prop(border-color, $color);\n  }\n}\n\n@mixin mdc-chip-outline-style($style, $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    border-style: $style;\n  }\n}\n\n@mixin mdc-chip-outline-width($width, $horizontal-padding: $mdc-chip-horizontal-padding, $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  // Note: Adjust padding to maintain consistent width with non-outlined chips\n  $horizontal-padding-value: max($horizontal-padding - $width, 0);\n\n  @include mdc-feature-targets($feat-structure) {\n    padding-right: $horizontal-padding-value;\n    padding-left: $horizontal-padding-value;\n    border-width: $width;\n  }\n}\n\n@mixin mdc-chip-horizontal-padding($padding, $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    padding-right: $padding;\n    padding-left: $padding;\n  }\n}\n\n@mixin mdc-chip-height($height, $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    height: $height;\n  }\n}\n\n@mixin mdc-chip-set-spacing($gap-size, $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    padding: $gap-size / 2;\n  }\n\n  .mdc-chip {\n    @include mdc-feature-targets($feat-structure) {\n      margin: $gap-size / 2;\n    }\n  }\n}\n\n@mixin mdc-chip-leading-icon-color($color, $opacity: $mdc-chip-icon-opacity, $query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  .mdc-chip__icon--leading {\n    @include mdc-feature-targets($feat-color) {\n      color: rgba(mdc-theme-prop-value($color), $opacity);\n    }\n  }\n}\n\n@mixin mdc-chip-trailing-icon-color(\n  $color,\n  $opacity: $mdc-chip-icon-opacity,\n  $hover-opacity: $mdc-chip-trailing-icon-hover-opacity,\n  $focus-opacity: $mdc-chip-trailing-icon-focus-opacity,\n  $query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  .mdc-chip__icon--trailing {\n    @include mdc-feature-targets($feat-color) {\n      color: rgba(mdc-theme-prop-value($color), $opacity);\n    }\n\n    &:hover {\n      @include mdc-feature-targets($feat-color) {\n        color: rgba(mdc-theme-prop-value($color), $hover-opacity);\n      }\n    }\n\n    &:focus {\n      @include mdc-feature-targets($feat-color) {\n        color: rgba(mdc-theme-prop-value($color), $focus-opacity);\n      }\n    }\n  }\n}\n\n// For customizing icon size, we need to increase specifity to ensure\n// overrides apply. Styles defined in the .material-icons CSS class are\n// loaded separately, so the order of CSS definitions is not guaranteed.\n\n@mixin mdc-chip-leading-icon-size($size, $query: mdc-feature-all()) {\n  .mdc-chip__icon.mdc-chip__icon--leading:not(.mdc-chip__icon--leading-hidden) {\n    @include mdc-chip-icon-size_($size, $query: $query);\n  }\n}\n\n@mixin mdc-chip-trailing-icon-size($size, $query: mdc-feature-all()) {\n  .mdc-chip__icon.mdc-chip__icon--trailing {\n    @include mdc-chip-icon-size_($size, $query: $query);\n  }\n}\n\n@mixin mdc-chip-icon-size_($size, $query) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    width: $size;\n    height: $size;\n    font-size: $size;\n  }\n}\n\n@mixin mdc-chip-leading-icon-margin(\n  $left-margin: $mdc-chip-leading-icon-margin-left,\n  $right-margin: $mdc-chip-leading-icon-margin-right,\n  $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  &.mdc-chip--selected .mdc-chip__checkmark,\n  .mdc-chip__icon--leading:not(.mdc-chip__icon--leading-hidden) {\n    @include mdc-feature-targets($feat-structure) {\n      @include mdc-rtl-reflexive-property(margin, $left-margin, $right-margin);\n    }\n  }\n}\n\n@mixin mdc-chip-trailing-icon-margin(\n  $left-margin: $mdc-chip-trailing-icon-margin-left,\n  $right-margin: $mdc-chip-trailing-icon-margin-right,\n  $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  .mdc-chip__icon--trailing {\n    @include mdc-feature-targets($feat-structure) {\n      margin-right: $right-margin;\n      margin-left: $left-margin;\n    }\n  }\n}\n\n@mixin mdc-chip-elevation-transition($query: mdc-feature-all()) {\n  $feat-animation: mdc-feature-create-target($query, animation);\n\n  @include mdc-feature-targets($feat-animation) {\n    transition: mdc-elevation-transition-value();\n  }\n\n  &.mdc-chip--exit {\n    @include mdc-feature-targets($feat-animation) {\n      transition:\n        mdc-elevation-transition-value(),\n        $mdc-chip-exit-transition;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"@material/animation/variables\";\n@import \"@material/theme/variables\";\n\n$mdc-chip-fill-color-default: mix(mdc-theme-prop-value(on-surface), mdc-theme-prop-value(surface), 12%) !default;\n$mdc-chip-ink-color-default: rgba(mdc-theme-prop-value(on-surface), .87) !default;\n$mdc-chip-horizontal-padding: 12px !default;\n$mdc-chip-height-default: 32px !default;\n\n$mdc-chip-icon-color: mdc-theme-prop-value(on-surface) !default;\n$mdc-chip-icon-opacity: .54 !default;\n$mdc-chip-trailing-icon-hover-opacity: .62 !default;\n$mdc-chip-trailing-icon-focus-opacity: .87 !default;\n$mdc-chip-leading-icon-size: 20px !default;\n$mdc-chip-trailing-icon-size: 18px !default;\n// Speed up delay to bridge gap between leading icon and checkmark transition.\n$mdc-chip-leading-icon-delay: -50ms !default;\n$mdc-chip-checkmark-with-leading-icon-delay: 80ms !default;\n\n$mdc-chip-checkmark-animation-delay: 50ms !default;\n$mdc-chip-checkmark-animation-duration: 150ms !default;\n$mdc-chip-width-animation-duration: 150ms !default;\n$mdc-chip-opacity-animation-duration: 75ms !default;\n\n$mdc-chip-leading-icon-margin-right: 4px !default;\n$mdc-chip-leading-icon-margin-left: -4px !default;\n\n$mdc-chip-trailing-icon-margin-right: -4px !default;\n$mdc-chip-trailing-icon-margin-left: 4px !default;\n\n$mdc-chip-exit-transition:\n  opacity 75ms $mdc-animation-standard-curve-timing-function,\n  width 150ms $mdc-animation-deceleration-curve-timing-function,\n  padding 100ms linear,\n  margin 100ms linear !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"@material/feature-targeting/functions\";\n@import \"@material/feature-targeting/mixins\";\n@import \"./variables\";\n@import \"./functions\";\n\n@mixin mdc-shape-radius($radius, $rtl-reflexive: false, $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    // Even if $rtl-reflexive is true, only emit RTL styles if we can't easily tell that the given radius is symmetrical\n    $needs-flip: $rtl-reflexive and length($radius) > 1;\n\n    @if ($needs-flip) {\n      /* @noflip */\n    }\n\n    border-radius: mdc-shape-prop-value($radius);\n\n    @if ($needs-flip) {\n      @include mdc-rtl {\n        /* @noflip */\n        border-radius: mdc-shape-flip-radius(mdc-shape-prop-value($radius));\n      }\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"@material/feature-targeting/functions\";\n@import \"@material/feature-targeting/mixins\";\n@import \"./variables\";\n@import \"./functions\";\n\n@mixin mdc-theme-core-styles($query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  :root {\n    @include mdc-feature-targets($feat-color) {\n      @each $style in map-keys($mdc-theme-property-values) {\n        --mdc-theme-#{$style}: #{map-get($mdc-theme-property-values, $style)};\n      }\n    }\n  }\n\n  @each $style in map-keys($mdc-theme-property-values) {\n    @if $style != \"background\" and $style != \"surface\" {\n      .mdc-theme--#{$style} {\n        @include mdc-feature-targets($feat-color) {\n          @include mdc-theme-prop(color, $style, true);\n        }\n      }\n    } @else {\n      .mdc-theme--#{$style} {\n        @include mdc-feature-targets($feat-color) {\n          @include mdc-theme-prop(background-color, $style);\n        }\n      }\n    }\n  }\n\n  // CSS rules for using primary and secondary (plus light/dark variants) as background colors.\n  @each $style in (\"primary\", \"secondary\") {\n    .mdc-theme--#{$style}-bg {\n      @include mdc-feature-targets($feat-color) {\n        @include mdc-theme-prop(background-color, $style, true);\n      }\n    }\n  }\n}\n\n// Applies the correct theme color style to the specified property.\n// $property is typically color or background-color, but can be any CSS property that accepts color values.\n// $style should be one of the map keys in $mdc-theme-property-values (_variables.scss), or a color value.\n// $edgeOptOut controls whether to feature-detect around Edge to avoid emitting CSS variables for it,\n// intended for use in cases where interactions with pseudo-element styles cause problems due to Edge bugs.\n@mixin mdc-theme-prop($property, $style, $important: false, $edgeOptOut: false) {\n  @if mdc-theme-is-var-with-fallback_($style) {\n    @if $important {\n      #{$property}: mdc-theme-get-var-fallback_($style) !important;\n      /* @alternate */\n      #{$property}: mdc-theme-var_($style) !important;\n    } @else {\n      #{$property}: mdc-theme-get-var-fallback_($style);\n      /* @alternate */\n      #{$property}: mdc-theme-var_($style);\n    }\n  } @else if mdc-theme-is-valid-theme-prop-value_($style) {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    @if not map-has-key($mdc-theme-property-values, $style) {\n      @error \"Invalid style: '#{$style}'. Choose one of: #{map-keys($mdc-theme-property-values)}\";\n    }\n\n    $value: map-get($mdc-theme-property-values, $style);\n\n    @if $important {\n      #{$property}: $value !important;\n\n      @if $edgeOptOut {\n        // stylelint-disable max-nesting-depth\n        @at-root {\n          // IE 11 doesn't understand this syntax and ignores the entire block.\n          // Edge understands this syntax and skips the entire block to avoid a nasty :before/:after pseudo-element bug.\n          // All other browsers apply the styles within the block.\n          @supports not (-ms-ime-align: auto) {\n            // stylelint-disable scss/selector-no-redundant-nesting-selector\n            & {\n              /* @alternate */\n              #{$property}: var(--mdc-theme-#{$style}, $value) !important;\n            }\n            // stylelint-enable scss/selector-no-redundant-nesting-selector\n          }\n        }\n        // stylelint-enable max-nesting-depth\n      } @else {\n        /* @alternate */\n        #{$property}: var(--mdc-theme-#{$style}, $value) !important;\n      }\n    } @else {\n      #{$property}: $value;\n\n      @if $edgeOptOut {\n        // stylelint-disable max-nesting-depth\n        @at-root {\n          // IE 11 doesn't understand this syntax and ignores the entire block.\n          // Edge understands this syntax and skips the entire block to avoid a nasty :before/:after pseudo-element bug.\n          // All other browsers apply the styles within the block.\n          @supports not (-ms-ime-align: auto) {\n            // stylelint-disable scss/selector-no-redundant-nesting-selector\n            & {\n              /* @alternate */\n              #{$property}: var(--mdc-theme-#{$style}, $value);\n            }\n            // stylelint-enable scss/selector-no-redundant-nesting-selector\n          }\n        }\n        // stylelint-enable max-nesting-depth\n      } @else {\n        /* @alternate */\n        #{$property}: var(--mdc-theme-#{$style}, $value);\n      }\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"@material/feature-targeting/functions\";\n@import \"@material/feature-targeting/mixins\";\n@import \"./variables\";\n\n@mixin mdc-typography-core-styles($query: mdc-feature-all()) {\n  .mdc-typography {\n    @include mdc-typography-base($query: $query);\n  }\n\n  @each $style in map-keys($mdc-typography-styles) {\n    .mdc-typography--#{$style} {\n      @include mdc-typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin mdc-typography-base($query: mdc-feature-all()) {\n  $feat-typography: mdc-feature-create-target($query, typography);\n\n  @include mdc-feature-targets($feat-typography) {\n    @each $key, $value in $mdc-typography-base {\n      #{$key}: $value;\n    }\n  }\n}\n\n@mixin mdc-typography($style, $query: mdc-feature-all()) {\n  $feat-typography: mdc-feature-create-target($query, typography);\n  $style-props: map-get($mdc-typography-styles, $style);\n\n  @if not map-has-key($mdc-typography-styles, $style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{map-keys($mdc-typography-styles)}\";\n  }\n\n  @include mdc-feature-targets($feat-typography) {\n    @each $key, $value in $style-props {\n      #{$key}: $value;\n    }\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin mdc-typography-overflow-ellipsis($query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n@mixin mdc-typography-baseline-top($distance, $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    display: block;\n    margin-top: 0;\n    /* @alternate */\n    line-height: normal;\n  }\n\n  &::before {\n    @include mdc-feature-targets($feat-structure) {\n      @include mdc-typography-baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n@mixin mdc-typography-baseline-bottom($distance, $query: mdc-feature-all()) {\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    margin-bottom: -1 * $distance;\n  }\n\n  &::after {\n    @include mdc-feature-targets($feat-structure) {\n      @include mdc-typography-baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n@mixin mdc-typography-baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: \"\";\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"./variables\";\n\n// Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n//\n// Usage Example:\n//\n// ```scss\n// .mdc-foo {\n//   position: absolute;\n//   left: 0;\n//\n//   @include mdc-rtl {\n//     left: auto;\n//     right: 0;\n//   }\n//\n//   &__bar {\n//     margin-left: 4px;\n//     @include mdc-rtl(\".mdc-foo\") {\n//       margin-left: auto;\n//       margin-right: 4px;\n//     }\n//   }\n// }\n//\n// .mdc-foo--mod {\n//   padding-left: 4px;\n//\n//   @include mdc-rtl {\n//     padding-left: auto;\n//     padding-right: 4px;\n//   }\n// }\n// ```\n//\n// Note that this mixin works by checking for an ancestor element with `[dir=\"rtl\"]`.\n// As a result, nested `dir` values are not supported:\n//\n// ```html\n// <html dir=\"rtl\">\n//   <!-- ... -->\n//   <div dir=\"ltr\">\n//     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n//   </div>\n// </html>\n// ```\n//\n// In the future, selectors such as the `:dir` pseudo-class (http://mdn.io/css/:dir) will help us mitigate this.\n@mixin mdc-rtl($root-selector: null) {\n  @if ($mdc-rtl-include) {\n    @if ($root-selector) {\n      @at-root {\n        #{$root-selector}[dir=\"rtl\"] &,\n        [dir=\"rtl\"] #{$root-selector} & {\n          @content;\n        }\n      }\n    } @else {\n      [dir=\"rtl\"] &,\n      &[dir=\"rtl\"] {\n        @content;\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include mdc-rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include mdc-rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin mdc-rtl-reflexive-box($base-property, $default-direction, $value, $root-selector: null) {\n  @if (index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include mdc-rtl-reflexive-property($base-property, $left-value, $right-value, $root-selector);\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include mdc-rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin mdc-rtl-reflexive-property($base-property, $left-value, $right-value, $root-selector: null) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include mdc-rtl-reflexive($prop-left, $left-value, $prop-right, $right-value, $root-selector);\n}\n\n// Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include mdc-rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin mdc-rtl-reflexive-position($position-property, $value, $root-selector: null) {\n  @if (index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: \"initial\" is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include mdc-rtl-reflexive(left, $left-value, right, $right-value, $root-selector);\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include mdc-rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin mdc-rtl-reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $root-selector: null\n) {\n  @include mdc-rtl-property_($left-property, $left-value);\n  @include mdc-rtl-property_($right-property, $right-value);\n\n  @include mdc-rtl($root-selector) {\n    @include mdc-rtl-property_($left-property, $right-value);\n    @include mdc-rtl-property_($right-property, $left-value);\n  }\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @access private\n///\n@mixin mdc-rtl-property_($property, $value) {\n  @if $mdc-rtl-include {\n    /* @noflip */\n  }\n\n  #{$property}: #{$value};\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"@material/ripple/variables\";\n@import \"@material/theme/variables\";\n\n$mdc-checkbox-mark-color: mdc-theme-prop-value(on-primary) !default;\n$mdc-checkbox-border-color: rgba(mdc-theme-prop-value(on-surface), .54) !default;\n$mdc-checkbox-disabled-color: rgba(mdc-theme-prop-value(on-surface), .26) !default;\n$mdc-checkbox-baseline-theme-color: secondary !default;\n\n$mdc-checkbox-touch-area: 40px !default;\n$mdc-checkbox-size: 18px !default;\n$mdc-checkbox-mark-stroke-size: 2/15 * $mdc-checkbox-size !default;\n$mdc-checkbox-border-width: 2px !default;\n$mdc-checkbox-transition-duration: 90ms !default;\n$mdc-checkbox-item-spacing: 4px !default;\n$mdc-checkbox-focus-indicator-opacity: map-get($mdc-ripple-dark-ink-opacities, focus) !default;\n\n// Manual calculation done on SVG\n$mdc-checkbox-mark-path-length_: 29.7833385 !default;\n$mdc-checkbox-indeterminate-checked-easing-function_: cubic-bezier(.14, 0, 0, 1) !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them.\n\n@import \"@material/animation/variables\";\n@import \"./variables\";\n\n@mixin mdc-ripple-keyframes_ {\n  @keyframes mdc-ripple-fg-radius-in {\n    from {\n      animation-timing-function: $mdc-animation-standard-curve-timing-function;\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n      // that custom properties are supported within the browser before adding this class, we can\n      // safely use them without a fallback.\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    }\n\n    to {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-in {\n    from {\n      animation-timing-function: linear;\n      opacity: 0;\n    }\n\n    to {\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-out {\n    from {\n      animation-timing-function: linear;\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$mdc-animation-deceleration-curve-timing-function: cubic-bezier(0, 0, .2, 1) !default;\n$mdc-animation-standard-curve-timing-function: cubic-bezier(.4, 0, .2, 1) !default;\n$mdc-animation-acceleration-curve-timing-function: cubic-bezier(.4, 0, 1, 1) !default;\n$mdc-animation-sharp-curve-timing-function: cubic-bezier(.4, 0, .6, 1) !default;\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/animation/variables\";\n@import \"@material/base/mixins\";\n@import \"@material/feature-targeting/functions\";\n@import \"@material/feature-targeting/mixins\";\n@import \"@material/theme/mixins\";\n@import \"./functions\";\n@import \"./keyframes\";\n@import \"./variables\";\n\n@mixin mdc-ripple-core-styles($query: mdc-feature-all()) {\n  // postcss-bem-linter: define ripple-surface\n\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  .mdc-ripple-surface {\n    @include mdc-ripple-surface($query: $query);\n    @include mdc-states($query: $query);\n    @include mdc-ripple-radius-bounded($query: $query);\n\n    @include mdc-feature-targets($feat-structure) {\n      position: relative;\n      outline: none;\n      overflow: hidden;\n    }\n\n    &[data-mdc-ripple-is-unbounded] {\n      @include mdc-ripple-radius-unbounded($query: $query);\n\n      @include mdc-feature-targets($feat-structure) {\n        overflow: visible;\n      }\n    }\n\n    &--primary {\n      @include mdc-states(primary, $query: $query);\n    }\n\n    &--accent {\n      @include mdc-states(secondary, $query: $query);\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n@mixin mdc-ripple-common($query: mdc-feature-all()) {\n  $feat-animation: mdc-feature-create-target($query, animation);\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\n  // mdc-ripple.scss.)\n  @include mdc-feature-targets($feat-animation) {\n    @include mdc-base-emit-once(\"mdc-ripple/common/animation\") {\n      @include mdc-ripple-keyframes_;\n    }\n  }\n\n  @include mdc-feature-targets($feat-structure) {\n    @include mdc-base-emit-once(\"mdc-ripple/common/structure\") {\n      // Styles used to detect buggy behavior of CSS custom properties in Edge.\n      // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n      // This is included in _mixins.scss rather than mdc-ripple.scss so that it will be\n      // present for other components which rely on ripple as well as mdc-ripple itself.\n      .mdc-ripple-surface--test-edge-var-bug {\n        --mdc-ripple-surface-test-edge-var: 1px solid #000;\n\n        visibility: hidden;\n\n        &::before {\n          border: var(--mdc-ripple-surface-test-edge-var);\n        }\n      }\n    }\n  }\n}\n\n@mixin mdc-ripple-surface($query: mdc-feature-all()) {\n  $feat-animation: mdc-feature-create-target($query, animation);\n  $feat-structure: mdc-feature-create-target($query, structure);\n\n  @include mdc-feature-targets($feat-structure) {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // !!DO NOT REMOVE!! mdc-ripple-will-change-replacer\n  }\n\n  &::before,\n  &::after {\n    @include mdc-feature-targets($feat-structure) {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\";\n    }\n  }\n\n  &::before {\n    @include mdc-feature-targets($feat-animation) {\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\n      transition:\n        opacity $mdc-states-wash-duration linear,\n        background-color $mdc-states-wash-duration linear;\n    }\n\n    @include mdc-feature-targets($feat-structure) {\n      z-index: 1; // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\n    }\n  }\n\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\n\n  &.mdc-ripple-upgraded::before {\n    @include mdc-feature-targets($feat-structure) {\n      transform: scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  &.mdc-ripple-upgraded::after {\n    @include mdc-feature-targets($feat-structure) {\n      top: 0;\n      /* @noflip */\n      left: 0;\n      transform: scale(0);\n      transform-origin: center center;\n    }\n  }\n\n  &.mdc-ripple-upgraded--unbounded::after {\n    @include mdc-feature-targets($feat-structure) {\n      top: var(--mdc-ripple-top, 0);\n      /* @noflip */\n      left: var(--mdc-ripple-left, 0);\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation::after {\n    @include mdc-feature-targets($feat-animation) {\n      animation:\n        mdc-ripple-fg-radius-in $mdc-ripple-translate-duration forwards,\n        mdc-ripple-fg-opacity-in $mdc-ripple-fade-in-duration forwards;\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation::after {\n    @include mdc-feature-targets($feat-animation) {\n      animation: mdc-ripple-fg-opacity-out $mdc-ripple-fade-out-duration;\n    }\n\n    @include mdc-feature-targets($feat-structure) {\n      // Retain transform from mdc-ripple-fg-radius-in activation\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n}\n\n@mixin mdc-states-base-color($color, $query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  &::before,\n  &::after {\n    @include mdc-feature-targets($feat-color) {\n      @if alpha(mdc-theme-prop-value($color)) > 0 {\n        @include mdc-theme-prop(background-color, $color, $edgeOptOut: true);\n      } @else {\n        // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n        // This avoids unnecessary transitions and overflow.\n        content: none;\n      }\n    }\n  }\n}\n\n@mixin mdc-states-hover-opacity($opacity, $query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover::before {\n    // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n    @include mdc-feature-targets($feat-color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mdc-states-focus-opacity($opacity, $has-nested-focusable-element: false, $query: mdc-feature-all()) {\n  $feat-animation: mdc-feature-create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: mdc-feature-create-target($query, color);\n\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  $cssOnlyFocusSelector: if(\n    $has-nested-focusable-element,\n    \"&:not(.mdc-ripple-upgraded):focus::before, &:not(.mdc-ripple-upgraded):focus-within::before\",\n    \"&:not(.mdc-ripple-upgraded):focus::before\"\n  );\n\n  #{$cssOnlyFocusSelector},\n  &.mdc-ripple-upgraded--background-focused::before {\n    // Note that this duration is only effective on focus, not blur\n    @include mdc-feature-targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include mdc-feature-targets($feat-color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mdc-states-press-opacity($opacity, $query: mdc-feature-all()) {\n  $feat-animation: mdc-feature-create-target($query, animation);\n  $feat-color: mdc-feature-create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  &:not(.mdc-ripple-upgraded) {\n    // Apply press additively by using the ::after pseudo-element\n    &::after {\n      @include mdc-feature-targets($feat-animation) {\n        transition: opacity $mdc-ripple-fade-out-duration linear;\n      }\n    }\n\n    &:active::after {\n      @include mdc-feature-targets($feat-animation) {\n        transition-duration: $mdc-ripple-fade-in-duration;\n      }\n\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include mdc-feature-targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    @include mdc-feature-targets($feat-color) {\n      --mdc-ripple-fg-opacity: #{$opacity};\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin mdc-states(\n  $color: mdc-theme-prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: mdc-feature-all()\n) {\n  @include mdc-states-interactions_($color, $has-nested-focusable-element, 0, $query);\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin mdc-states-activated($color, $has-nested-focusable-element: false, $query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n  $activated-opacity: mdc-states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    &::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include mdc-feature-targets($feat-color) {\n        opacity: $activated-opacity;\n      }\n    }\n\n    @include mdc-states-interactions_($color, $has-nested-focusable-element, $activated-opacity, $query);\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin mdc-states-selected($color, $has-nested-focusable-element: false, $query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n  $selected-opacity: mdc-states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    &::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include mdc-feature-targets($feat-color) {\n        opacity: $selected-opacity;\n      }\n    }\n\n    @include mdc-states-interactions_($color, $has-nested-focusable-element, $selected-opacity, $query);\n  }\n}\n\n@mixin mdc-ripple-radius-bounded($radius: 100%, $query: mdc-feature-all()) {\n  $feat-struture: mdc-feature-create-target($query, structure);\n\n  &::before,\n  &::after {\n    @include mdc-feature-targets($feat-struture) {\n      top: calc(50% - #{$radius});\n      /* @noflip */\n      left: calc(50% - #{$radius});\n      width: $radius * 2;\n      height: $radius * 2;\n    }\n  }\n\n  &.mdc-ripple-upgraded::after {\n    @include mdc-feature-targets($feat-struture) {\n      width: var(--mdc-ripple-fg-size, $radius);\n      height: var(--mdc-ripple-fg-size, $radius);\n    }\n  }\n}\n\n@mixin mdc-ripple-radius-unbounded($radius: 100%, $query: mdc-feature-all()) {\n  $feat-struture: mdc-feature-create-target($query, structure);\n\n  &::before,\n  &::after {\n    @include mdc-feature-targets($feat-struture) {\n      top: calc(50% - #{$radius / 2});\n      /* @noflip */\n      left: calc(50% - #{$radius / 2});\n      width: $radius;\n      height: $radius;\n    }\n  }\n\n  &.mdc-ripple-upgraded::before,\n  &.mdc-ripple-upgraded::after {\n    @include mdc-feature-targets($feat-struture) {\n      top: var(--mdc-ripple-top, calc(50% - #{$radius / 2}));\n      /* @noflip */\n      left: var(--mdc-ripple-left, calc(50% - #{$radius / 2}));\n      width: var(--mdc-ripple-fg-size, $radius);\n      height: var(--mdc-ripple-fg-size, $radius);\n    }\n  }\n\n  &.mdc-ripple-upgraded::after {\n    @include mdc-feature-targets($feat-struture) {\n      width: var(--mdc-ripple-fg-size, $radius);\n      height: var(--mdc-ripple-fg-size, $radius);\n    }\n  }\n}\n\n@mixin mdc-states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: mdc-feature-all()\n) {\n  @include mdc-states-base-color($color, $query);\n  @include mdc-states-hover-opacity(mdc-states-opacity($color, hover) + $opacity-modifier, $query);\n  @include mdc-states-focus-opacity(\n    mdc-states-opacity($color, focus) + $opacity-modifier,\n    $has-nested-focusable-element,\n    $query\n  );\n  @include mdc-states-press-opacity(mdc-states-opacity($color, press) + $opacity-modifier, $query);\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$mdc-ripple-fade-in-duration: 75ms !default;\n$mdc-ripple-fade-out-duration: 150ms !default;\n$mdc-ripple-translate-duration: 225ms !default;\n$mdc-states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$mdc-ripple-dark-ink-opacities: (\n  hover: .04,\n  focus: .12,\n  press: .12,\n  selected: .08,\n  activated: .12\n) !default;\n\n$mdc-ripple-light-ink-opacities: (\n  hover: .08,\n  focus: .24,\n  press: .24,\n  selected: .16,\n  activated: .24\n) !default;\n\n// Legacy\n\n$mdc-ripple-pressed-dark-ink-opacity: .16 !default;\n$mdc-ripple-pressed-light-ink-opacity: .32 !default;\n"],"sourceRoot":""}