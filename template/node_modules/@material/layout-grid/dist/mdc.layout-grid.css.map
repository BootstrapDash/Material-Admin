{"version":3,"sources":["webpack:///./packages/mdc-layout-grid/mdc-layout-grid.scss","webpack:///./packages/mdc-layout-grid/_mixins.scss"],"names":[],"mappings":";;;;;;;AAuBA;EAEI;EACA;EACA;EAFA;EACA;EACA;EAFA;EACA;EACA;CAjBH;;ACuDG;EDjCJ;ICoEE;IACA;IACA,cDnEa;ICoEb;GDrFC;CACF;ACyCG;ED5BJ;ICoEE;IACA;IACA,cDnEa;ICoEb;GD7EC;CACF;AC4BG;EDvBJ;ICoEE;IACA;IACA,cDnEa;ICoEb;GDrEC;CACF;;AC8BG;EDvBJ;ICyEE;IACA;IACA;IACA;IACA;GD3EC;EC6ED;ID/EF;MCgFI;MACA;MACA,eD9EW;MC+EX;MACA;KD1EC;GACF;CACF;ACMG;EDlBJ;ICyEE;IACA;IACA;IACA;IACA;GDzDC;EC2DD;ID/EF;MCgFI;MACA;MACA,eD9EW;MC+EX;MACA;KDxDC;GACF;CACF;ACjBG;EDbJ;ICyEE;IACA;IACA;IACA;IACA;GDvCC;ECyCD;ID/EF;MCgFI;MACA;MACA,eD9EW;MC+EX;MACA;KDtCC;GACF;CACF;;ACzBG;EDZJ;ICgCE;IACA;IAmDA;IACA;IACA;GDxCC;ECXD;IDnCF;MCoCI;MACA;KDcC;GACF;ECoCD;IDxFF;MCyFI;KDjCC;GACF;EA5Cc;;ICmBf;IACA;GD6BC;EC3BD;IDtBe;;MCuBb;MACA;KD+BC;GACF;;EAxDc;;ICmBf;IACA;GD0CC;ECxCD;IDtBe;;MCuBb;MACA;KD4CC;GACF;;EArEc;;ICmBf;IACA;GDuDC;ECrDD;IDtBe;;MCuBb;MACA;KDyDC;GACF;;EAlFc;;ICmBf;IACA;GDoEC;EClED;IDtBe;;MCuBb;MACA;KDsEC;GACF;;EA/Fc;;ICmBf;IACA;GDiFC;EC/ED;IDtBe;;MCuBb;MACA;KDmFC;GACF;;EA5Gc;;ICmBf;IACA;GD8FC;EC5FD;IDtBe;;MCuBb;MACA;KDgGC;GACF;;EAzHc;;ICmBf;IACA;GD2GC;ECzGD;IDtBe;;MCuBb;MACA;KD6GC;GACF;;EAtIc;;ICmBf;IACA;GDwHC;ECtHD;IDtBe;;MCuBb;MACA;KD0HC;GACF;;EAnJc;;ICmBf;IACA;GDqIC;ECnID;IDtBe;;MCuBb;MACA;KDuIC;GACF;;EAhKc;;ICmBf;IACA;GDkJC;EChJD;IDtBe;;MCuBb;MACA;KDoJC;GACF;;EA7Kc;;ICmBf;IACA;GD+JC;EC7JD;IDtBe;;MCuBb;MACA;KDiKC;GACF;;EA1Lc;;ICmBf;IACA;GD4KC;EC1KD;IDtBe;;MCuBb;MACA;KD8KC;GACF;CACF;AC9MG;EDPJ;ICgCE;IACA;IAmDA;IACA;IACA;GDuIC;EC1LD;IDnCF;MCoCI;MACA;KD6LC;GACF;EC3ID;IDxFF;MCyFI;KD8IC;GACF;EA3Nc;;ICmBf;IACA;GD4MC;EC1MD;IDtBe;;MCuBb;MACA;KD8MC;GACF;;EAvOc;;ICmBf;IACA;GDyNC;ECvND;IDtBe;;MCuBb;MACA;KD2NC;GACF;;EApPc;;ICmBf;IACA;GDsOC;ECpOD;IDtBe;;MCuBb;MACA;KDwOC;GACF;;EAjQc;;ICmBf;IACA;GDmPC;ECjPD;IDtBe;;MCuBb;MACA;KDqPC;GACF;;EA9Qc;;ICmBf;IACA;GDgQC;EC9PD;IDtBe;;MCuBb;MACA;KDkQC;GACF;;EA3Rc;;ICmBf;IACA;GD6QC;EC3QD;IDtBe;;MCuBb;MACA;KD+QC;GACF;;EAxSc;;ICmBf;IACA;GD0RC;ECxRD;IDtBe;;MCuBb;MACA;KD4RC;GACF;;EArTc;;ICmBf;IACA;GDuSC;ECrSD;IDtBe;;MCuBb;MACA;KDySC;GACF;;EAlUc;;ICmBf;IACA;GDoTC;EClTD;IDtBe;;MCuBb;MACA;KDsTC;GACF;;EA/Uc;;ICmBf;IACA;GDiUC;EC/TD;IDtBe;;MCuBb;MACA;KDmUC;GACF;;EA5Vc;;ICmBf;IACA;GD8UC;EC5UD;IDtBe;;MCuBb;MACA;KDgVC;GACF;;EAzWc;;ICmBf;IACA;GD2VC;ECzVD;IDtBe;;MCuBb;MACA;KD6VC;GACF;CACF;AClYG;EDFJ;ICgCE;IACA;IAmDA;IACA;IACA;GDsTC;ECzWD;IDnCF;MCoCI;MACA;KD4WC;GACF;EC1TD;IDxFF;MCyFI;KD6TC;GACF;EA1Yc;;ICmBf;IACA;GD2XC;ECzXD;IDtBe;;MCuBb;MACA;KD6XC;GACF;;EAtZc;;ICmBf;IACA;GDwYC;ECtYD;IDtBe;;MCuBb;MACA;KD0YC;GACF;;EAnac;;ICmBf;IACA;GDqZC;ECnZD;IDtBe;;MCuBb;MACA;KDuZC;GACF;;EAhbc;;ICmBf;IACA;GDkaC;EChaD;IDtBe;;MCuBb;MACA;KDoaC;GACF;;EA7bc;;ICmBf;IACA;GD+aC;EC7aD;IDtBe;;MCuBb;MACA;KDibC;GACF;;EA1cc;;ICmBf;IACA;GD4bC;EC1bD;IDtBe;;MCuBb;MACA;KD8bC;GACF;;EAvdc;;ICmBf;IACA;GDycC;ECvcD;IDtBe;;MCuBb;MACA;KD2cC;GACF;;EApec;;ICmBf;IACA;GDsdC;ECpdD;IDtBe;;MCuBb;MACA;KDwdC;GACF;;EAjfc;;ICmBf;IACA;GDmeC;ECjeD;IDtBe;;MCuBb;MACA;KDqeC;GACF;;EA9fc;;ICmBf;IACA;GDgfC;EC9eD;IDtBe;;MCuBb;MACA;KDkfC;GACF;;EA3gBc;;ICmBf;IACA;GD6fC;EC3fD;IDtBe;;MCuBb;MACA;KD+fC;GACF;;EAxhBc;;ICmBf;IACA;GD0gBC;ECxgBD;IDtBe;;MCuBb;MACA;KD4gBC;GACF;CACF;AA3hBG;ECsEF,SDvEa;CA+hBd;AA9hBG;ECsEF,SDvEa;CAkiBd;AAjiBG;ECsEF,SDvEa;CAqiBd;AApiBG;ECsEF,SDvEa;CAwiBd;AAviBG;ECsEF,SDvEa;CA2iBd;AA1iBG;ECsEF,SDvEa;CA8iBd;AA7iBG;ECsEF,SDvEa;CAijBd;AAhjBG;ECsEF,SDvEa;CAojBd;AAnjBG;ECsEF,SDvEa;CAujBd;AAtjBG;ECsEF,UDvEa;CA0jBd;AAzjBG;ECsEF,UDvEa;CA6jBd;AA5jBG;ECsEF,UDvEa;CAgkBd;AAzjBC;ECqEE;CDufH;ACrfG;EDvEF;ICwEI;GDwfH;CACF;AA7jBC;ECyEE;CDufH;AA5jBC;ECyEE;CDsfH;ACpfG;ED3EF;IC4EI;GDufH;CACF;;AC9lBG;ED+BJ;ICyFE;IACA,2KACE;GD0eD;CACF;AC1mBG;EDoCJ;ICyFE;IACA,sKACE;GDgfD;CACF;ACrnBG;EDyCJ;ICyFE;IACA,mKACE;GDsfD;CACF;;AAtkBD;EACE;EACA;CAykBD;;AAtkBD;EACE;EACA","file":"mdc.layout-grid.css","sourcesContent":["// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@import \"./variables\";\n@import \"./mixins\";\n\n:root {\n  @each $size in map-keys($mdc-layout-grid-columns) {\n    --mdc-layout-grid-margin-#{$size}: #{map-get($mdc-layout-grid-default-margin, $size)};\n    --mdc-layout-grid-gutter-#{$size}: #{map-get($mdc-layout-grid-default-gutter, $size)};\n    --mdc-layout-grid-column-width-#{$size}: #{map-get($mdc-layout-grid-column-width, $size)};\n  }\n}\n\n// postcss-bem-linter: define layout-grid\n.mdc-layout-grid {\n  @each $size in map-keys($mdc-layout-grid-columns) {\n    @include mdc-layout-grid-media-query_($size) {\n      $margin: map-get($mdc-layout-grid-default-margin, $size);\n\n      @include mdc-layout-grid($size, $margin, $mdc-layout-grid-max-width);\n    }\n  }\n}\n\n.mdc-layout-grid__inner {\n  @each $size in map-keys($mdc-layout-grid-columns) {\n    @include mdc-layout-grid-media-query_($size) {\n      $margin: map-get($mdc-layout-grid-default-margin, $size);\n      $gutter: map-get($mdc-layout-grid-default-gutter, $size);\n\n      @include mdc-layout-grid-inner($size, $margin, $gutter);\n    }\n  }\n}\n\n.mdc-layout-grid__cell {\n  // select the upper breakpoint\n  $upper-breakpoint: nth(map-keys($mdc-layout-grid-columns), 1);\n\n  @each $size in map-keys($mdc-layout-grid-columns) {\n    @include mdc-layout-grid-media-query_($size) {\n      $gutter: map-get($mdc-layout-grid-default-gutter, $size);\n\n      @include mdc-layout-grid-cell($size, $mdc-layout-grid-default-column-span, $gutter);\n\n      @for $span from 1 through map-get($mdc-layout-grid-columns, $upper-breakpoint) {\n        // Span classes.\n        // stylelint-disable max-nesting-depth\n        @at-root .mdc-layout-grid__cell--span-#{$span},\n          .mdc-layout-grid__cell--span-#{$span}-#{$size} {\n          @include mdc-layout-grid-cell-span_($size, $span, $gutter);\n        }\n        // stylelint-enable max-nesting-depth\n      }\n    }\n  }\n\n  // Order override classes.\n  @for $i from 1 through map-get($mdc-layout-grid-columns, $upper-breakpoint) {\n    &--order-#{$i} {\n      @include mdc-layout-grid-cell-order($i);\n    }\n  }\n\n  // Alignment classes.\n  &--align-top {\n    @include mdc-layout-grid-cell-align(top);\n  }\n\n  &--align-middle {\n    @include mdc-layout-grid-cell-align(middle);\n  }\n\n  &--align-bottom {\n    @include mdc-layout-grid-cell-align(bottom);\n  }\n}\n\n.mdc-layout-grid--fixed-column-width {\n  @each $size in map-keys($mdc-layout-grid-columns) {\n    @include mdc-layout-grid-media-query_($size) {\n      $margin: map-get($mdc-layout-grid-default-margin, $size);\n      $gutter: map-get($mdc-layout-grid-default-gutter, $size);\n      $column-width: map-get($mdc-layout-grid-column-width, $size);\n\n      @include mdc-layout-grid-fixed-column-width($size, $margin, $gutter, $column-width);\n    }\n  }\n}\n\n.mdc-layout-grid--align-left {\n  margin-right: auto;\n  margin-left: 0;\n}\n\n.mdc-layout-grid--align-right {\n  margin-right: 0;\n  margin-left: auto;\n}\n// postcss-bem-linter: end\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@import \"./variables\";\n\n// returns the lower grid boundary or null if the smallest grid is selected\n@function mdc-layout-grid-breakpoint-min($size) {\n  @if not map-has-key($mdc-layout-grid-columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-layout-grid-columns)}\";\n  }\n  $min: map-get($mdc-layout-grid-breakpoints, $size);\n\n  @return if($min > 0, $min, null);\n}\n\n// returns the upper grid boundary or null if the largest grid is selected\n@function mdc-layout-grid-breakpoint-max($size) {\n  @if not map-has-key($mdc-layout-grid-columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-layout-grid-columns)}\";\n  }\n  $names: map-keys($mdc-layout-grid-columns);\n  $n: index($names, $size);\n  $prev: if($n > 1, nth($names, $n - 1), null);\n\n  @return if($prev, (mdc-layout-grid-breakpoint-min($prev) - 1px), null);\n}\n\n// Private mixins, meant for internal use.\n@mixin mdc-layout-grid-media-query_($size) {\n  @if not map-has-key($mdc-layout-grid-columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-layout-grid-columns)}\";\n  }\n\n  $min: mdc-layout-grid-breakpoint-min($size);\n  $max: mdc-layout-grid-breakpoint-max($size);\n\n  @if $min == null and $max != null {\n    // Phone\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max != null {\n    // Tablet\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    // Desktop\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    // Fallback - no breakpoints defined\n    @content;\n  }\n}\n\n@mixin mdc-layout-grid-cell-span_($size, $span, $gutter) {\n  @if not map-has-key($mdc-layout-grid-columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-layout-grid-columns)}\";\n  }\n\n  $percent: percentage($span / map-get($mdc-layout-grid-columns, $size));\n\n  @if $percent > 100% {\n    $percent: 100%;\n  }\n\n  width: calc(#{$percent} - #{$gutter});\n  width: calc(#{$percent} - var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}));\n\n  @supports (display: grid) {\n    width: auto;\n    grid-column-end: span min($span, map-get($mdc-layout-grid-columns, $size));\n  }\n}\n\n// Public mixins, meant for developer usage.\n@mixin mdc-layout-grid($size, $margin, $max-width: null) {\n  @if not map-has-key($mdc-layout-grid-columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-layout-grid-columns)}\";\n  }\n\n  box-sizing: border-box;\n  margin: 0 auto;\n  padding: $margin;\n  padding: var(--mdc-layout-grid-margin-#{$size}, #{$margin});\n\n  @if $max-width {\n    max-width: $max-width;\n  }\n}\n\n@mixin mdc-layout-grid-inner($size, $margin, $gutter) {\n  @if not map-has-key($mdc-layout-grid-columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-layout-grid-columns)}\";\n  }\n\n  display: flex;\n  flex-flow: row wrap;\n  align-items: stretch;\n  margin: -$gutter / 2;\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2 * -1);\n\n  @supports (display: grid) {\n    display: grid;\n    margin: 0;\n    grid-gap: $gutter;\n    grid-gap: var(--mdc-layout-grid-gutter-#{$size}, $gutter);\n    grid-template-columns: repeat(map-get($mdc-layout-grid-columns, $size), minmax(0, 1fr));\n  }\n}\n\n@mixin mdc-layout-grid-cell($size, $default-span, $gutter) {\n  @if not map-has-key($mdc-layout-grid-columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-layout-grid-columns)}\";\n  }\n\n  @include mdc-layout-grid-cell-span_($size, $default-span, $gutter);\n\n  box-sizing: border-box;\n  margin: $gutter / 2;\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2);\n\n  @supports (display: grid) {\n    margin: 0;\n  }\n}\n\n@mixin mdc-layout-grid-cell-order($order) {\n  order: $order;\n}\n\n@mixin mdc-layout-grid-cell-align($position) {\n  @if $position == \"top\" {\n    align-self: flex-start;\n\n    @supports (display: grid) {\n      align-self: start;\n    }\n  }\n\n  @if $position == \"middle\" {\n    align-self: center;\n  }\n\n  @if $position == \"bottom\" {\n    align-self: flex-end;\n\n    @supports (display: grid) {\n      align-self: end;\n    }\n  }\n\n  @if $position == \"stretch\" {\n    align-self: stretch;\n  }\n}\n\n@mixin mdc-layout-grid-fixed-column-width($size, $margin, $gutter, $column-width) {\n  @if not map-has-key($mdc-layout-grid-columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-layout-grid-columns)}\";\n  }\n\n  $columnCount: map-get($mdc-layout-grid-columns, $size);\n  $gutter-number: $columnCount - 1;\n  $margin-number: 2;\n\n  width: $column-width * $columnCount + $gutter * $gutter-number + $margin * $margin-number;\n  width:\n    calc(\n      var(--mdc-layout-grid-column-width-#{$size}, #{$column-width}) * #{$columnCount} +\n      var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) * #{$gutter-number} +\n      var(--mdc-layout-grid-margin-#{$size}, #{$margin}) * #{$margin-number}\n    );\n}\n"],"sourceRoot":""}